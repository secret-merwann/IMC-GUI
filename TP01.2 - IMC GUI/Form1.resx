<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        R0lGODlhtAC0AIYAAE1NTfitkjMzM+CTlsbjn+bm5vaOko2NjfvJj/iskfvVyIyMjNPT08Xin8XFxXp6
        evSDWqWlpX9/f6ampm9vb+Lwz1NTU/rGyKjUb9BdYfaNke/JyvvJjvFUWllZWf708VhYWPFkMfX19faX
        dv3kxr29vZCQkOnp6d7e3vnBrPDw8CgoKPN4TfJuP8LCwvmwWjY2NvWNaP3s4PrLupPJS2NjY/eig+4q
        MTw8PP3w8fzg1WFhYURERIWFhbfbh5KSkuLi4vf785ubm8Q0OprNV7i4uJycnNh4e/Nxdpqamn5+fvBG
        TchCR6mpqbKysvJiaK+vr+n028xPVNTU1MjIyPeZLPi2n/vx8e84P/iprL7ek/748KHQY09PT9Ppt/zi
        44mJifR/g3V1da/Xe/m4ure3t2xsbNvtw/vU1fD35/igOvq+d8zmq+u7vdRqbvebn9yFiEZGRvzZr/PW
        1+eusPinSGJiYvfk5BoaGozGP8EnLe0cJPeTHvFaJMzMzP///yH/C05FVFNDQVBFMi4wAwEBAAAh+QQA
        AAAAACwAAAAAtAC0AAAI/wD/CBxIsKDBgwgTKlzIsKHDhxAjSpxIsaLFixgzatzIsaPHjyBDihxJsuTH
        EwymqBio4gTGEy4pnlg5cmbFln+C2BQoAgUDFCIGioAZVCDMmH8KpKSZUUQEEAAAeCghcAKAAhcpUIAY
        pIifpAAmkASwoKITACeAAPgh0I+ZqAAoTBHoIqoTgUC6AHiQM4mFqB5caIywdoofMV3mWsVqccrch34A
        UPkjwg+QsWUpnj1RAECSPyi6TEVRxAOIy3W7SBBYAkAXvlQA9DBsBgTSm6+LAjHxdfGfExEWmBD8RwWU
        AwfKFHXwY0GEy3+gQBGoosmBH19/Bx+etIfsIiqMTP/+3WRBksdTjKAo36TowBMThJfQbeRAE5pkqUNZ
        gN2okSllHBDBbX9sFkQXZfyxAACP/RGZEX/UBUYXLoEhxg58lQFAgn8w0ARjFjEAwF0GLRaEEjtA4R0D
        f5hgRhFQdAEhFV00UQQFOwSlFWUU2KFiF36cmOKKBXjXQxmdiVVADWZA8YAFk9VVwwQHANBEQWKIUQJh
        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
        d8RjHvW4Rz720Y9/BGQgcxMQADs=
</value>
  </data>
</root>